@Entry
@Component
struct StatePage {
  @State message: string = 'Hello World';
  /**
   *  组件状态管理
   *
   *  方便开发人员管理组建的状态 ArkTs提供一系列的装饰器 去管理状态
   *  1. @State
   *     概念： 监听组件变量变化，变量改变会驱动组件视图刷新
   *     数据监听范围： 当数据是数组类型时，可以监听到数组本身赋值变化，
   *                 元素的增删改查也能监听，基本数据类型数组可以监听，但是数据类型是class 和object时无法监听
   *     作用域： 组件内
   *     注意： 修饰的变量必须本地初始化
   *  2. @Prop 一般用于数据隔离，避免数据污染
   *     概念： 监听组件变量变化，变量改变会驱动组件视图刷新，还可以同步父组件的状态变量，
   *           但是只能单向同步，父组件能够监听子组件的状态变化。类似于Vue中的监听事件
   *     作用域： 父子组件之间
   *     注意： 修饰的变量不可以本地初始化，只能通过父组件来初始化或者传参
   *  3. @Link
   *     概念： 监听组件变量变化，变量改变会驱动组件视图刷新，还可以同步父组件的状态变量，
   *           能够实现双向同步，父组件能够监听子组件的状态变化
   *     作用域： 父子组件之间
   *     注意： 1. 修饰的变量不可以本地初始化，只能通过父组件来初始化
   *           2. 父组件传递参数，由 this.变量名 的形式，变更为 $变量名 的形式
   *  4. @Provide @Consume
   *     概念： 监听组件变量变化，变量改变会驱动组件视图刷新，用于跨组件层级传递 状态变量，能实现双向同步
   *           @Provide组件 能够监听 @Consume组件 的状态变化，反之亦然
   *  5. @ObjectLink @Observed
   */
  build() {

  }
}